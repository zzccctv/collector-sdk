<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.datapipeline.collector</groupId>
    <artifactId>collector-sdk</artifactId>
    <version>0.1.7-SNAPSHOT</version>
    <properties>
        <nexus.ip>registry.datapipeline.com</nexus.ip>
        <opentelemetry.version>1.26.0</opentelemetry.version>
        <autoservice.version>1.1.0</autoservice.version>
        <spring.version>2.5.0</spring.version>
        <spock.version>2.3-groovy-4.0</spock.version>
        <objenesis.version>3.3</objenesis.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>jdk.tools</groupId>
            <artifactId>jdk.tools</artifactId>
            <version>1.8</version>
            <scope>system</scope>
            <systemPath>${java.home}/../lib/tools.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>com.google.auto.service</groupId>
            <artifactId>auto-service</artifactId>
            <version>${autoservice.version}</version>
        </dependency>
        <!-- test -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.9.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.12.17</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis</artifactId>
            <version>3.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>${spock.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- opentelemetry -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api</artifactId>
            <version>${opentelemetry.version}</version>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk</artifactId>
            <version>${opentelemetry.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>opentelemetry-sdk-logs</artifactId>
                    <groupId>io.opentelemetry</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>opentelemetry-sdk-trace</artifactId>
                    <groupId>io.opentelemetry</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-otlp</artifactId>
            <version>${opentelemetry.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>opentelemetry-sdk-trace</artifactId>
                    <groupId>io.opentelemetry</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>opentelemetry-sdk-logs</artifactId>
                    <groupId>io.opentelemetry</groupId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>dp-snapshot</id>
            <name>dp snapshot</name>
            <layout>default</layout>
            <url>https://${nexus.ip}/nexus/content/repositories/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>dp-release</id>
            <name>dp release</name>
            <layout>default</layout>
            <url>https://${nexus.ip}/nexus/content/repositories/releases/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>dp-public</id>
            <name>dp public</name>
            <url>https://${nexus.ip}/nexus/content/groups/public/</url>
        </repository>
    </repositories>
    <distributionManagement>
        <snapshotRepository>
            <id>datapipeline</id>
            <url>https://registry.datapipeline.com/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>datapipeline</id>
            <url>https://registry.datapipeline.com/nexus/content/repositories/pub/</url>
        </repository>
    </distributionManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <!-- 绑定source插件到Maven的生命周期,并在生命周期后执行绑定的source的goal -->
                <executions>
                    <execution>
                        <!-- 绑定source插件到Maven的生命周期 -->
                        <phase>compile</phase>
                        <!--在生命周期后执行绑定的source插件的goals -->
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>2.0.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M7</version>
                <configuration>
                    <useModulePath>false</useModulePath>
                    <useFile>false</useFile>
                    <parallel>methods</parallel>
                    <includes>
                        <include>**/*Test</include>
                        <include>**/*Spec</include>
                    </includes>
                </configuration>
            </plugin>
        </plugins>

    </build>
</project>